var require = (function () {
    var loaded = {};
  
    function loadScript(src, callback, parent) {
      if (loaded[src]) {
        if (callback) {
          console.log('cb-01', src, callback);
          callback();
        }
        return;
      }
  
      var script = document.createElement('script');
      script.type = 'text/javascript';
      script.src = src;
      script.async = true;
      script.onload = function () {
        loaded[src] = true;
  
        if (parent && parent.dependencies) {
          parent.dependencies.children.push(loadedRequire);
        }
  
        if (callback) {
          console.log('cb-02', src, callback);
          callback();
        }
      };
  
      var loadedRequire = function(deps, callback) {
        if (typeof deps === 'string') {
          var src = deps;
          loadScript(src, callback, loadedRequire);
        } else if (Array.isArray(deps)) {
          var dependencies = deps.slice();
          var finalCallback = callback;
  
          if (typeof dependencies[dependencies.length - 1] === 'function') {
            finalCallback = dependencies.pop();
          }
  
          var parentRequire = loadedRequire;
          loadedRequire.dependencies = {
            parent: parentRequire,
            children: []
          };
  
          loadDependencies(dependencies, function () {
            loadScript(dependencies[dependencies.length - 1], finalCallback, parentRequire);
          });
        } else {
          throw new Error('Invalid arguments for require');
        }
      };
  
      document.body.appendChild(script);
  
      return loadedRequire;
    }
  
    function loadDependencies(deps, callback) {
      var depCount = deps.length;
      var depIndex = 0;
  
      function loadNextDep() {
        if (depIndex < depCount) {
          var dep = deps[depIndex++];
          loadScript(dep, loadNextDep);
        } else {
          if (callback) {
            setTimeout(callback, 150);
            //callback();
          }
        }
      }
  
      loadNextDep();
    }
  
    function require(deps, callback) {
      if (typeof deps === 'string') {
        var src = deps;
        loadScript(src, callback);
      } else if (Array.isArray(deps)) {
        var dependencies = deps.slice();
        var finalCallback = callback;
  
        if (typeof dependencies[dependencies.length - 1] === 'function') {
          finalCallback = dependencies.pop();
        }
  
        loadDependencies(dependencies, function () {
          loadScript(dependencies[dependencies.length - 1], finalCallback);
        });
      } else {
        throw new Error('Invalid arguments for require');
      }
    }
  
    return require;
  })();