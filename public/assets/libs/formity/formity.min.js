function refresh_box(form, box) {
    form = $("form[data-id='" + form + "']");
    $.ajax({
        //    url: RAIZ_METODO + '?_ft=' + box,
        url: form.attr('data-base') + '&_ft=' + box,
        type: 'POST',
        data: $(form).serialize(),
        success: function (x) { eval(x); },
        error: function (xhr) {
            alert(xhr.responseText);
        },
        complete: function () { $("[name='" + box + "']").trigger("changeCall"); }
    });
}
function formity_set_options(box, obj) {
    var html = '';
    for (var key in obj) {
        html += "<option value=" + key + ">" + obj[key] + "</option>";
    }
    $("select[name='" + box + "']").html(html).change();
    if ($("select[name='" + box + "']").attr('multiple') == 'multiple') {
        $("select[name='" + box + "']").multiselect('refresh');
    }
}
function formity_fill_select(box, obj) {
    var html = '';
    for (var key in obj) {
        html += "<option value=" + obj[key].id + ">" + obj[key].val + "</option>";
    }
    $("select[name='" + box + "']").html(html).change();
}
function formity_set_value(box, text) {
    if ($("[name='" + box + "']").length) {
        $("[name='" + box + "']").val(text).change();
    } else if ($("[data-id='" + box + "']").length) {
        if (empty(text)) {
            return;
        }
        var size = $(text).length;
        if (size > 0) {
            $("[data-id='" + box + "']")[0].elementsCount(size);
        }
        for (var i in text) {
            for (var j in text[i]) {
                $("[data-id='" + box + "']").children().eq(i).find("[name='" + j + "[]']").val(text[i][j]).change();
                console.log("CAMBIAR", i, $("[data-id='" + box + "']").children().eq(i), j, text[i][j]);
            }
        }
        console.log('llenar form ' + box + '-' + size);
    }
}
function formity_on_change(box) {
    $("[name='" + box + "']").change().trigger('changeTree');
}
function formity_set_disabled(box, f) {
    disabler($("[name='" + box + "']"), 'formity', f);
}
var Formity = function (box, params) {
    var version = 20170828;
    var index = 1000;
    var configuracion = {
        txtMsg: '[data-popy-error]',
    };
    var fnn_valids = {};
    var messages = {};
    var selectFields = ['select', 'input', 'textarea'];
    var fields = {};
    var fieldsValidations = {};
    var fieldsNeeds = {};
    var url;

    var metodosPrivados = {
        init: function () {
            console.log("metodosPrivados INIT");
            url = $(box).attr('action');
            $(box).on("submit", function (e) {
                if (metodosPrivados.form_is_valid(true)) {
                    $(box).attr('action', url);
                    typeof configuracion.onSubmit === 'function' && configuracion.onSubmit(e, box);
                } else {
                    e.preventDefault();
                    return false;
                }
            });
            $(box).find('[data-submit]').on('click', function (e) {
                e.preventDefault();
                var b = $(this);
                if (b.attr('data-action')) {
                    url = b.attr('data-action');
                }
                if (empty(b.attr('data-confirm')) && b.attr('data-confirm') !== '') {
                    $(box).trigger('submit');
                }
            });
            $(box).find("[data-on-change]").on("change", function () {
                var elem = $(this);
                refresh_box($(box).attr('data-id'), elem.attr('name'));
            });
            $(box).find("[data-fnn-depend]").each(function () {
                var elem = $(this);
                elem.attr('data-fnn-depend').split(',').forEach(function (n) {
                    var field = n.split('.')[1];
                    console.log('Atento a:' + field);
                    $("[name='" + field + "']").on('change', function () {
                        refresh_box($(box).attr('data-id'), elem.attr('name'));
                    });
                });
            });
            metodosPrivados.refreshFields();
            setTimeout(function () {
                $(box).find('[data-value]').each(function () {
                    if ($(this).find("[value='" + $(this).attr('data-value') + "']").length != 0 && $(this).val() != $(this).attr('data-value')) {
                        $(this).val($(this).attr('data-value')).change();
                    }
                });
            }, 700);
        },
        refreshFields: function () {
            fields = {};
            fieldsValidations = {};
            $(box).find(selectFields.join(',')).filter(function () {
                return $(this).attr('data-fnn-required');
            }).each(function () {
                var id = !empty($(this).attr('data-fnn-id')) ? $(this).attr('data-fnn-id') : ++index;
                $(this).attr('data-fnn-id', id);
                fields[id] = this;
            }).filter(function () {
                var r = empty($(this).attr("data-form-fnn"));
                if (r) {
                    $(this).attr("data-form-fnn", true);
                }
                return r;
            }).on('change', function () {
                metodosPrivados.field_validate($(this).attr('data-fnn-id'), true, true);
            }).on('changeCall', function () {
                console.log("ChangeCall");
                metodosPrivados.field_validate($(this).attr('data-fnn-id'), true, true);
            });
        },
        form_is_valid: function (explict, except) {
            console.log("form_is_valid", explict, except, messages);
            var rp = true;
            var fMsg = false;
            if (!empty(fields)) {
                for (var index in fields) {
                    if (fields.hasOwnProperty(index) && index !== except) {
                        var l = metodosPrivados.field_is_valid(index, explict);
                        console.log('VALID', index, l);
                        if (!l && !fMsg && explict) {
                            if (!empty(configuracion.txtMsg)) {
                                var msg = isset(messages[index]) ? messages[index] : 'Complete los campos obligatorios (' + $(fields[index]).attr('data-name') + ')';
                                console.log("BOX", fields[index]);
                                $(fields[index]).parent().find("[data-fnn-message]").hide().text(msg).fadeIn();
                                $(configuracion.txtMsg).stop().hide().text(msg).fadeIn();
                            }
                            fMsg = true;
                        } else if (l) {
                            $(fields[index]).parent().find("[data-fnn-message]").hide().text('');
                        }
                        rp = rp && l;
                    }
                }
                if (!empty(configuracion.txtMsg) && rp) {
                    $(box).find("[data-fnn-message]").hide().text('');
                    $(configuracion.txtMsg).hide();
                }
            }
            return rp;
        },
        field_is_valid: function (name, explict) {
            if (isset(fieldsValidations[name])) {
                console.log("cas1", name);
                if (explict) {
                    metodosPrivados.field_tag(name, fieldsValidations[name]);
                }
                return fieldsValidations[name];
            } else {
                console.log("cas2", name);
                var r = metodosPrivados.field_validate(name, explict, false);
                return r;
            }
        },
        field_validate: function (name, explict, valid_form, force_valid, irradiar) {
            console.log("field_validate", name, explict, valid_form, force_valid, irradiar);
            var b = fields[name];
            var rp = false;
            if (typeof force_valid !== 'undefined') {
                rp = !empty(force_valid);
            } else {
                if (typeof fnn_valids[name] === 'function') {
                    rp = fnn_valids[name].call(b, function (s) {
                        return metodosPrivados.field_validate(name, explict, valid_form, s);
                    }) || false;
                } else {
                    var is_empty = false;
                    if (!empty($(b).attr('data-fnn-replace'))) {
                        rp = metodosPrivados.field_is_valid($(b).attr('data-fnn-replace'), explict);
                    }

                    if (b.nodeName == 'INPUT') {
                        is_empty = b.value == '';
                    } else if (b.nodeName == 'SELECT') {
                        is_empty = b.value == '';
                    } else if (b.nodeName == 'TEXTAREA') {
                        is_empty = b.value == '';
                    }

                    if (empty($(b).attr('data-fnn-required'))) {
                        rp = rp || is_empty;
                    }
                    rp = rp || !is_empty;
                }
            }
            if (empty(irradiar)) {
                /* var depends = $(box).find("[data-fnn-depend='" + name + "']");
                if(!empty(depends.length)) {
                  console.log("Si hay Depends", depends);
                  depends.each(function(x, y) {
                    var id = $(this).attr('data-fnn-id');
                    metodosPrivados.field_validate(id, explict, valid_form, force_valid, true);
                  });
                } */
                var replaces = $(box).find("[data-fnn-replace='" + name + "']");
                if (!empty(replaces.length)) {
                    replaces.each(function (x, y) {
                        var id = $(this).attr('data-fnn-id');
                        metodosPrivados.field_validate(id, false, false, rp, true);
                    });
                }
            }
            if (explict) {
                metodosPrivados.field_tag(name, rp);
            }
            fieldsValidations[name] = rp;
            if (valid_form && empty(irradiar)) {
                metodosPrivados.form_is_valid(false, name);
            }
            return rp;
        },
        field_tag: function (name, rp) {
            var b = fields[name];
            var c = b;
            if (!empty($(b).attr('data-fnn-interface'))) {
                c = $(b).attr('data-fnn-interface');
                c = $(box).find("[data-fnn-id='" + c + "']")[0];
            }
            if (rp) {
                $(c).removeClass("error").addClass("success");
            } else {
                $(c).removeClass("success").addClass("error");
            }
        },
        fnn_valid: function (name, callbak) {
            fnn_valids[name] = callbak;
        },
        set_message: function (name, text) {
            messages[name] = text;
        },
        get_field: function (name) {
            return fields[name];
        },
        setConfig: function (x) {
            configuracion = array_merge(configuracion, x);
        },
        serialize: function () {
            var rp = {};
            for (var index in fields) {
                if (fields.hasOwnProperty(index)) {
                    if ($(fields[index]).is(':input') && $(fields[index]).attr('type') == 'checkbox') {
                        rp[$(fields[index]).attr('name')] = $(fields[index]).is(':checked') ? 1 : 0;
                    } else {
                        rp[$(fields[index]).attr('name')] = $(fields[index]).val();
                    }
                }
            }
            return rp;
        },
    };
    var metodosPublicos = {
        form_is_valid: function (x, y) {
            return metodosPrivados.form_is_valid(true, null);
        },
        setConfig: function (x) {
            return metodosPrivados.setConfig(x);
        },
        refreshFields: function () {
            return metodosPrivados.refreshFields();
        },
        field_validate: function (name) {
            return metodosPrivados.field_validate(name, true, false);
        },
        field_is_valid: function (x, y) {
            return metodosPrivados.field_is_valid(x, y);
        },
        fnn_valid: function (x, y) {
            return metodosPrivados.fnn_valid(x, y);
        },
        set_message: function (x, y) {
            return metodosPrivados.set_message(x, y);
        },
        get_field: function (x) {
            return metodosPrivados.get_field(x);
        },
        serialize: function () {
            return metodosPrivados.serialize();
        },
    };
    $(document).ready(function () {
        metodosPrivados.init();
    });
    metodosPublicos.setConfig(params);
    return metodosPublicos;
};

var FormityStep = function (params) {
    console.log('params', params);
    var last = 0;
    var step = 0;
    var block = false;
    var div = 0;
    var parametros = {};
    var metodosPrivados = null;
    var metodosPublicos = null;
    metodosPrivados = {
        init: function () {
            $(document).ready(function () {
                console.log("READY");
                var hWind = window.innerHeight;//window.outerHeight;//$(window).height();
                var hBody = 100;//$(".struct_web_body").height();
                var hStep = hWind - hBody;
                hStep = hStep < 300 ? 300 : hStep;
                div = hStep;
                $(parametros.form).css({ height: hStep, overflow: 'hidden' });
                $(parametros.form).children().css({ height: hStep });
                $(parametros.form).bind('mousewheel', function (e) {
                    e.preventDefault();
                    var diff = e.originalEvent.wheelDelta / 120 > 0;
                    if (diff) {
                        metodosPrivados.prev();
                    } else {
                        metodosPrivados.next();
                    }
                });
                console.log("FORM", parametros.form);
                $(parametros.form).on('click', function (e) {
                    $('html, body').animate({
                        scrollTop: $(parametros.form).offset().top - 50
                    }, 500);
                    console.log("HOVER");
                });
            });
        },
        prev: function () {
            if (block) {
                return;
            }
            block = true;
            if (step >= 1) {
                metodosPrivados.goTo(step - 1);
            } else {
                block = false;
            }
        },
        next: function () {
            if (block) {
                return;
            }
            block = true;
            if (metodosPrivados.can_next()) {
                if (metodosPrivados.index_exist(step + 1)) {
                    metodosPrivados.goTo(step + 1);
                } else {
                    block = false;
                }
            } else {
                console.log("Debes corregir");
            }
        },
        goTo: function (index) {
            $(parametros.form).stop().animate({ scrollTop: index * div }, '500', 'swing', function () {
                step = index;
                block = false;
            });
        },
        index_exist: function (index) {
            return index < $(parametros.form).children().size();
        },
        can_next: function () {
            return true;
        },
        setConfig: function (x) {
            parametros = array_merge(parametros, x);
        },
    };
    metodosPublicos = {
        init: function (x) { return metodosPrivados.init(x); },
        prev: function () { return metodosPrivados.prev(); },
        next: function () { return metodosPrivados.next(); },
    };
    metodosPrivados.setConfig(params);
    return metodosPublicos;
};
$(document).ready(function () {
    setTimeout(function () {
        $("[data-on-change]").each(function () {
            console.log("ELEMENTO:" + $(this).attr('name'));
            if (!empty($(this).val())) {
                console.log('CON TEXTO' + $(this).val());
                $(this).trigger('change');
            }
        });
    }, 100);
    $("form[data-formity]").each(function () {
        if (typeof $(this).data('formity') !== 'object') {
            $(this).data('formity', Formity(this, {}));
        }
    });
});